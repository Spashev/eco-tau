version: "3.0"

# http://localhost:15670/ - rabit
# http://localhost:8000/api/v1 - api

services:

  database:
    image: postgres:15.0-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql-core/data/
    env_file:
      - ./docker/.env
    networks:
      - super-app
    ports:
      - "5430:5432"

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    tty: true
    image: super-app
    restart: always
#    command: "uvicorn core.asgi:application --host 0.0.0.0 --port 8000"
    command: "python manage.py runserver 0.0.0.0:8000"
    networks:
      - super-app
    env_file:
      - ./docker/.env
    ports:
      - "8000:8000"
    volumes:
      - media:/code/media:rw
      - static:/code/static:rw
      - ./app:/code
    depends_on:
      - redis
      - database
      - rabbit
      - minio
    extra_hosts:
      - "localhost:172.17.0.1"

  minio:
    image: minio/minio
    hostname: "minio"
    networks:
      - super-app
    volumes:
      - ./minio:/minio_files
    env_file:
      - docker/.env
    command: 'minio server /minio_files --console-address ":9001"'
    ports:
      - "9000:9000"
      - "9001:9001"

  createbuckets:
    image: minio/mc
    networks:
      - super-app
    depends_on:
      - minio
    env_file:
      - docker/.env
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb --quiet myminio/photos;
      /usr/bin/mc policy set none myminio/photos;
      "

  rabbit:
    image: rabbitmq:management-alpine
    hostname: core-rabbit
    restart: always
    networks:
      - super-app
    ports:
      - "15670:15672"
      - "5670:5672"

  redis:
    restart: always
    image: redis:alpine
    hostname: core-redis
    networks:
      - super-app
    ports:
      - "6379:6379"

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile
    hostname: worker
    entrypoint: celery
    command: -A core worker -c 3 --loglevel=INFO
    networks:
      - super-app
    env_file:
      - ./docker/.env
    volumes:
      - ./app:/code
    depends_on:
      - redis
      - database
      - rabbit
      - minio

#  nginx:
#    build: docker/nginx
#    volumes:
#      - static:/static
#    ports:
#      - "80:80"
#    depends_on:
#      - app

volumes:
  postgres_data:
  media:
  static:
  minio:

networks:
  super-app:
    driver: bridge
