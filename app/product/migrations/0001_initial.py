# Generated by Django 4.1.4 on 2023-02-19 07:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='categories', to='product.category')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Convenience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('icon', models.CharField(blank=True, max_length=255, null=True, verbose_name='Иконки')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='conveniences', to='product.convenience')),
            ],
            options={
                'verbose_name': 'Условия',
                'verbose_name_plural': 'Условии',
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Тип построении домов',
                'verbose_name_plural': 'Тип построении домов',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('price_per_night', models.CharField(max_length=255, verbose_name='Цена за ночь')),
                ('price_per_week', models.CharField(blank=True, max_length=255, null=True, verbose_name='Цена за неделю')),
                ('price_per_month', models.CharField(blank=True, max_length=255, null=True, verbose_name='Цена за месяц')),
                ('rooms_qty', models.CharField(max_length=255, verbose_name='Количество комнат')),
                ('guest_qty', models.CharField(max_length=255, verbose_name='Количество гостей')),
                ('bed_qty', models.CharField(max_length=255, verbose_name='Количество кроватей')),
                ('bedroom_qty', models.CharField(max_length=255, verbose_name='Количество спален')),
                ('toilet_qty', models.CharField(blank=True, max_length=255, null=True, verbose_name='Количество уборной')),
                ('bath_qty', models.CharField(blank=True, max_length=255, null=True, verbose_name='Количество ванн')),
                ('description', models.TextField(verbose_name='Описание')),
                ('city', models.CharField(max_length=255, verbose_name='Город/Район')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('longitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Longitude')),
                ('latitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Longitude')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активный')),
                ('category', models.ManyToManyField(related_name='products', to='product.category')),
                ('convenience', models.ManyToManyField(related_name='products', to='product.convenience')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Хозяин')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='product.type', verbose_name='Тип построение')),
            ],
            options={
                'verbose_name': 'Зона отдыха',
                'verbose_name_plural': 'Зона отдыха',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original', models.ImageField(upload_to='images/original/%Y/%m/%d', verbose_name='Оригинальная картина')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='product.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Картинка продукта',
                'verbose_name_plural': 'Картинки продуктов',
                'ordering': ('-pk',),
            },
        ),
    ]
