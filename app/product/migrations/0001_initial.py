# Generated by Django 4.1.4 on 2023-05-07 09:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import utils.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('icon', models.FileField(blank=True, null=True, upload_to='icons/categories', verbose_name='Иконки')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Convenience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('icon', models.FileField(blank=True, null=True, upload_to='icons/conveniences', verbose_name='Иконки')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='conveniences', to='product.convenience')),
            ],
            options={
                'verbose_name': 'Условия',
                'verbose_name_plural': 'Условии',
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Тип построении домов',
                'verbose_name_plural': 'Тип построении домов',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('price_per_night', models.CharField(max_length=255, verbose_name='Цена за ночь')),
                ('price_per_week', models.CharField(blank=True, max_length=255, null=True, verbose_name='Цена за неделю')),
                ('price_per_month', models.CharField(blank=True, max_length=255, null=True, verbose_name='Цена за месяц')),
                ('rooms_qty', models.CharField(max_length=255, verbose_name='Количество комнат')),
                ('guest_qty', models.CharField(max_length=255, verbose_name='Количество гостей')),
                ('bed_qty', models.CharField(max_length=255, verbose_name='Количество кроватей')),
                ('bedroom_qty', models.CharField(max_length=255, verbose_name='Количество спален')),
                ('toilet_qty', models.CharField(blank=True, max_length=255, null=True, verbose_name='Количество уборной')),
                ('bath_qty', models.CharField(blank=True, max_length=255, null=True, verbose_name='Количество ванн')),
                ('description', models.TextField(verbose_name='Описание')),
                ('city', models.CharField(max_length=255, verbose_name='Город/Район')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('lng', models.CharField(blank=True, max_length=255, null=True, verbose_name='Координата Longitude')),
                ('lat', models.CharField(blank=True, max_length=255, null=True, verbose_name='Координата Latitude')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активный')),
                ('priority', models.TextField(choices=[('HIGHEST', 'Наивысший приоритет'), ('MEDIUM', 'Средний приоритет'), ('LOW', 'Низкий приоритет')], default='MEDIUM', max_length=50)),
                ('like_count', models.IntegerField(default=0, verbose_name='Likes')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Коментарии')),
                ('category', models.ManyToManyField(related_name='products', to='product.category')),
                ('convenience', models.ManyToManyField(related_name='products', to='product.convenience')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Хозяин')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='product.type', verbose_name='Тип построение')),
            ],
            options={
                'verbose_name': 'Зона отдыха',
                'verbose_name_plural': 'Зона отдыха',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='product.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created_at', 'updated_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original', models.ImageField(upload_to='images/original', verbose_name='Оригинальная картина')),
                ('thumbnail', models.ImageField(null=True, upload_to='images/thumbnail', verbose_name='Thumbnail картина')),
                ('width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('mimetype', models.CharField(blank=True, default=None, max_length=300, null=True)),
                ('size', models.IntegerField(blank=True, default=None, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='product.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Картинка продукта',
                'verbose_name_plural': 'Картинки продуктов',
                'ordering': ('-pk',),
            },
            bases=(models.Model, utils.mixins.ResizeImageMixin),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Дата заезда')),
                ('end_date', models.DateField(verbose_name='Дата выезда')),
                ('product', models.ManyToManyField(to='product.product')),
            ],
            options={
                'verbose_name': 'Бронь',
                'verbose_name_plural': 'Брони',
                'ordering': ('-id',),
            },
        ),
    ]
